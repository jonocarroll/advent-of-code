% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day12.R
\name{dijkstra}
\alias{dijkstra}
\title{Implementation of dijkstra using on-demand query
derived from https://www.algorithms-and-technologies.com/dijkstra/r
This returns an array containing the length of the shortest path from the start node to each other node.
It is only guaranteed to return correct results if there are no negative edges in the graph. Positive cycles are fine.
This has a runtime of O(|V|^2) (|V| = number of Nodes), for a faster implementation see @see ../fast/Dijkstra.java (using adjacency lists)}
\usage{
dijkstra(grid, start, dir = -1)
}
\arguments{
\item{start}{the node to start from.}

\item{dir}{are we going up or down? passed to can_reach()}

\item{graph}{an adjacency-matrix-representation of the graph where (x,y) is the weight of the edge or 0 if there is no edge.}
}
\value{
an array containing the shortest distances from the given start node to each other node
}
\description{
Implementation of dijkstra using on-demand query
derived from https://www.algorithms-and-technologies.com/dijkstra/r
This returns an array containing the length of the shortest path from the start node to each other node.
It is only guaranteed to return correct results if there are no negative edges in the graph. Positive cycles are fine.
This has a runtime of O(|V|^2) (|V| = number of Nodes), for a faster implementation see @see ../fast/Dijkstra.java (using adjacency lists)
}
