% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day20.R
\name{day20}
\alias{day20}
\alias{f20a}
\alias{f20b}
\alias{example_data_20}
\title{Day 20: Grove Positioning System}
\usage{
f20a(x)

f20b(x)

example_data_20(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{f20a(x)} returns .... For Part Two,
\code{f20b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2022/day/20}{Grove Positioning System}
}
\details{
\strong{Part One}

It\'s finally time to meet back up with the Elves. When you try to
contact them, however, you get no reply. Perhaps you\'re out of range?

You know they\'re headed to the grove where the \emph{star} fruit grows, so
if you can figure out where that is, you should be able to meet back up
with them.

Fortunately, your handheld device has a file (your puzzle input) that
contains the grove\'s coordinates! Unfortunately, the file is
\emph{encrypted} - just in case the device were to fall into the wrong hands.

Maybe you can
[decrypt]{title="You once again make a mental note to remind the Elves later not to invent their own cryptographic functions."}
it?

When you were still back at the camp, you overheard some Elves talking
about coordinate file encryption. The main operation involved in
decrypting the file is called \emph{mixing}.

The encrypted file is a list of numbers. To \emph{mix} the file, move each
number forward or backward in the file a number of positions equal to
the value of the number being moved. The list is \emph{circular}, so moving a
number off one end of the list wraps back around to the other end as if
the ends were connected.

For example, to move the \code{1} in a sequence like
\verb{4, 5, 6, }\emph{\code{1}}\verb{, 7, 8, 9}, the \code{1} moves one position forward:
\verb{4, 5, 6, 7, }\emph{\code{1}}\verb{, 8, 9}. To move the \code{-2} in a sequence like
\verb{4, }\emph{\code{-2}}\verb{, 5, 6, 7, 8, 9}, the \code{-2} moves two positions backward,
wrapping around: \verb{4, 5, 6, 7, 8, }\emph{\code{-2}}\verb{, 9}.

The numbers should be moved \emph{in the order they originally appear} in the
encrypted file. Numbers moving around during the mixing process do not
change the order in which the numbers are moved.

Consider this encrypted file:

\if{html}{\out{<div class="sourceCode">}}\preformatted{1
2
-3
3
-2
0
4
}\if{html}{\out{</div>}}

Mixing this file proceeds as follows:

\if{html}{\out{<div class="sourceCode">}}\preformatted{Initial arrangement:
1, 2, -3, 3, -2, 0, 4

1 moves between 2 and -3:
2, 1, -3, 3, -2, 0, 4

2 moves between -3 and 3:
1, -3, 2, 3, -2, 0, 4

-3 moves between -2 and 0:
1, 2, 3, -2, -3, 0, 4

3 moves between 0 and 4:
1, 2, -2, -3, 0, 3, 4

-2 moves between 4 and 1:
1, 2, -3, 0, 3, 4, -2

0 does not move:
1, 2, -3, 0, 3, 4, -2

4 moves between -3 and 0:
1, 2, -3, 4, 0, 3, -2
}\if{html}{\out{</div>}}

Then, the grove coordinates can be found by looking at the 1000th,
2000th, and 3000th numbers after the value \code{0}, wrapping around the list
as necessary. In the above example, the 1000th number after \code{0} is
\emph{\code{4}}, the 2000th is \emph{\code{-3}}, and the 3000th is \emph{\code{2}}; adding these
together produces \emph{\code{3}}.

Mix your encrypted file exactly once. \emph{What is the sum of the three
numbers that form the grove coordinates?}

\strong{Part Two}

\emph{(Use have to manually add this yourself.)}

\emph{(Try using \code{convert_clipboard_html_to_roxygen_md()})}
}
\examples{
f20a(example_data_20())
f20b()
}
