% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day22.R
\name{day22}
\alias{day22}
\alias{f22a}
\alias{f22b}
\alias{example_data_22}
\title{Day 22: Monkey Map}
\usage{
f22a(x)

f22b(x)

example_data_22(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{f22a(x)} returns .... For Part Two,
\code{f22b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2022/day/22}{Monkey Map}
}
\details{
\strong{Part One}

The monkeys take you on a surprisingly easy trail through the jungle.
They\'re even going in roughly the right direction according to your
handheld device\'s Grove Positioning System.

As you walk, the monkeys explain that the grove is protected by a \emph{force
field}. To pass through the force field, you have to enter a password;
doing so involves tracing a specific \emph{path} on a strangely-shaped board.

At least, you\'re pretty sure that\'s what you have to do; the elephants
aren\'t exactly fluent in monkey.

The monkeys give you notes that they took when they last saw the
password entered (your puzzle input).

For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{        ...#
        .#..
        #...
        ....
...#.......#
........#...
..#....#....
..........#.
        ...#....
        .....#..
        .#......
        ......#.

10R5L5R10L4R5L5
}\if{html}{\out{</div>}}

The first half of the monkeys\' notes is a \emph{map of the board}. It is
comprised of a set of \emph{open tiles} (on which you can move, drawn \code{.})
and \emph{solid walls} (tiles which you cannot enter, drawn \verb{#}).

The second half is a description of \emph{the path you must follow}. It
consists of alternating numbers and letters:
\itemize{
\item A \emph{number} indicates the \emph{number of tiles to move} in the direction
you are facing. If you run into a wall, you stop moving forward and
continue with the next instruction.
\item A \emph{letter} indicates whether to turn 90 degrees \emph{clockwise} (\code{R}) or
\emph{[counterclockwise]{title="Or \"anticlockwise\", if you're anti-counterclockwise."}}
(\code{L}). Turning happens in-place; it does not change your current
tile.
}

So, a path like \verb{10R5} means \"go forward 10 tiles, then turn clockwise
90 degrees, then go forward 5 tiles\".

You begin the path in the leftmost open tile of the top row of tiles.
Initially, you are facing \emph{to the right} (from the perspective of how
the map is drawn).

If a movement instruction would take you off of the map, you \emph{wrap
around} to the other side of the board. In other words, if your next
tile is off of the board, you should instead look in the direction
opposite of your current facing as far as you can until you find the
opposite edge of the board, then reappear there.

For example, if you are at \code{A} and facing to the right, the tile in
front of you is marked \code{B}; if you are at \code{C} and facing down, the tile
in front of you is marked \code{D}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{        ...#
        .#..
        #...
        ....
...#.D.....#
........#...
B.#....#...A
.....C....#.
        ...#....
        .....#..
        .#......
        ......#.
}\if{html}{\out{</div>}}

It is possible for the next tile (after wrapping around) to be a \emph{wall};
this still counts as there being a wall in front of you, and so movement
stops before you actually wrap to the other side of the board.

By drawing the \emph{last facing you had} with an arrow on each tile you
visit, the full path taken by the above example looks like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{        >>v#
        .#v.
        #.v.
        ..v.
...#...v..v#
>>>v...>#.>>
..#v...#....
...>>>>v..#.
        ...#....
        .....#..
        .#......
        ......#.
}\if{html}{\out{</div>}}

To finish providing the password to this strange input device, you need
to determine numbers for your final \emph{row}, \emph{column}, and \emph{facing} as
your final position appears from the perspective of the original map.
Rows start from \code{1} at the top and count downward; columns start from
\code{1} at the left and count rightward. (In the above example, row 1,
column 1 refers to the empty space with no tile on it in the top-left
corner.) Facing is \code{0} for right (\code{>}), \code{1} for down (\code{v}), \code{2} for left
(\code{<}), and \code{3} for up (\code{^}). The \emph{final password} is the sum of 1000
times the row, 4 times the column, and the facing.

In the above example, the final row is \code{6}, the final column is \code{8}, and
the final facing is \code{0}. So, the final password is 1000 \* 6 + 4 \* 8 +
0: \emph{\code{6032}}.

Follow the path given in the monkeys\' notes. \emph{What is the final
password?}

\strong{Part Two}

As you reach the force field, you think you hear some Elves in the
distance. Perhaps they\'ve already arrived?

You approach the strange \emph{input device}, but it isn\'t quite what the
monkeys drew in their notes. Instead, you are met with a large \emph{cube};
each of its six faces is a square of 50x50 tiles.

To be fair, the monkeys\' map \emph{does} have six 50x50 regions on it. If
you were to \emph{carefully fold the map}, you should be able to shape it
into a cube!

In the example above, the six (smaller, 4x4) faces of the cube are:

\if{html}{\out{<div class="sourceCode">}}\preformatted{        1111
        1111
        1111
        1111
222233334444
222233334444
222233334444
222233334444
        55556666
        55556666
        55556666
        55556666
}\if{html}{\out{</div>}}

You still start in the same position and with the same facing as before,
but the \emph{wrapping} rules are different. Now, if you would walk off the
board, you instead \emph{proceed around the cube}. From the perspective of
the map, this can look a little strange. In the above example, if you
are at A and move to the right, you would arrive at B facing down; if
you are at C and move down, you would arrive at D facing up:

\if{html}{\out{<div class="sourceCode">}}\preformatted{        ...#
        .#..
        #...
        ....
...#.......#
........#..A
..#....#....
.D........#.
        ...#..B.
        .....#..
        .#......
        ..C...#.
}\if{html}{\out{</div>}}

Walls still block your path, even if they are on a different face of the
cube. If you are at E facing up, your movement is blocked by the wall
marked by the arrow:

\if{html}{\out{<div class="sourceCode">}}\preformatted{        ...#
        .#..
     -->#...
        ....
...#..E....#
........#...
..#....#....
..........#.
        ...#....
        .....#..
        .#......
        ......#.
}\if{html}{\out{</div>}}

Using the same method of drawing the \emph{last facing you had} with an arrow
on each tile you visit, the full path taken by the above example now
looks like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{        >>v#
        .#v.
        #.v.
        ..v.
...#..^...v#
.>>>>>^.#.>>
.^#....#....
.^........#.
        ...#..v.
        .....#v.
        .#v<<<<.
        ..v...#.
}\if{html}{\out{</div>}}

The final password is still calculated from your final position and
facing from the perspective of the map. In this example, the final row
is \code{5}, the final column is \code{7}, and the final facing is \code{3}, so the
final password is 1000 \* 5 + 4 \* 7 + 3 = \emph{\code{5031}}.

Fold the map into a cube, \emph{then} follow the path given in the monkeys\'
notes. \emph{What is the final password?}
}
\examples{
f22a(example_data_22())
f22b()
}
