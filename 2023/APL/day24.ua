Data ← ⊜(⊜(⊜⋕≠@,.)≠@@.)≠@\n.▽≠@\s.&fras"../R/inst/input24.txt"
Range ← [200000000000000 400000000000000]

CalcT ← (
  ⊃(×↻1⊙⋅∘|×⊙⋅(↻1)|×↻1⋅⊙∘|×⋅⊙(↻1)|∘)
  ⊙(-×).⊡0÷∩-
)
CalcU ← ⊡0÷∩- ⊃(×↻1⊙⋅∘|×⊙⋅(↻1)|×⊙(↻1)|×↻1⊙∘)
Test ← (
  ⊃(-:⊙∘|-:⊙⋅∘|-:⋅⋅⊙∘|∘)∩°⊟
  ⊃CalcU CalcT
  ××⊓(>0|>0|×⊃(⊡0|⊡1)×⊓≥≤⊙,°⊟ Range)
)
$"Part I = _" ÷2/+♭⊠Test .≡\+Data

# Find vx, vy, vz
Row ← ≡(⊟∩⊡ ⊙, ⊃([0∘]|[1∘]))
Dups ← ▽≡(=°⊟)∩(◫2) ⊛∩⊏,:⍏.≡(⊡1).
VMods ← ¯-500 ⊚=∩◿ ,:+-500⇡1000 ⊃(⊡0_1|⊡0_0|⊡1_0)
VCand ← ⊐/(▽⊃∊∘) ≡(□VMods) Dups
V ← ♭≡(VCand Row) ⇡3¤Data

# Solve for x, y, z
NOne ← -×÷∩⊡,:⊢⊚≠0.,,
Norm ← ⍥⊂4 ⍥(:⊙≡NOne .⊃(¤⊡0)(↘1))4
Solve ← ≡(⊡5÷⊡⊢⊚≠0..) Norm ≡⍜(↙5)⇌ Norm
Eq ← ↘¯1⊂∩≡⊂ ,: [⍥(↻1.)2 0_0_1] ⊓≡⍜(↘1)(⊂0)≡⍜(↘2)(⊂0) °⊟
$"Part II = _" /+↙3 Solve Eq ≡(≡(⊂:) ⊙- °⊟)↙2 Data ¤V
