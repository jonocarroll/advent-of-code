% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day10.R
\name{day10}
\alias{day10}
\alias{f10a}
\alias{f10b}
\alias{example_data_10}
\title{Day 10: Pipe Maze}
\usage{
f10a(x)

f10b(x)

example_data_10(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{f10a(x)} returns .... For Part Two,
\code{f10b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2023/day/10}{Pipe Maze}
}
\details{
\strong{Part One}

You use the hang glider to ride the hot air from Desert Island all the
way up to the floating metal island. This island is surprisingly cold
and there definitely aren\'t any thermals to glide on, so you leave your
hang glider behind.

You wander around for a while, but you don\'t find any people or
animals. However, you do occasionally find signposts labeled \"\href{https://en.wikipedia.org/wiki/Hot_spring}{Hot Springs}{target="_blank"}\"
pointing in a seemingly consistent direction; maybe you can find someone
at the hot springs and ask them where the desert-machine parts are made.

The landscape here is alien; even the flowers and trees are made of
metal. As you stop to admire some metal grass, you notice something
metallic scurry away in your peripheral vision and jump into a big pipe!
It didn\'t look like any animal you\'ve ever seen; if you want a better
look, you\'ll need to get ahead of it.

Scanning the area, you discover that the entire field you\'re standing
on is [densely packed with
pipes]{title="Manufactured by Hamilton and Hilbert Pipe Company"}; it
was hard to tell at first because they\'re the same metallic silver
color as the \"ground\". You make a quick sketch of all of the surface
pipes you can see (your puzzle input).

The pipes are arranged in a two-dimensional grid of \emph{tiles}:
\itemize{
\item \code{|} is a \emph{vertical pipe} connecting north and south.
\item \code{-} is a \emph{horizontal pipe} connecting east and west.
\item \code{L} is a \emph{90-degree bend} connecting north and east.
\item \code{J} is a \emph{90-degree bend} connecting north and west.
\item \code{7} is a \emph{90-degree bend} connecting south and west.
\item \code{F} is a \emph{90-degree bend} connecting south and east.
\item \code{.} is \emph{ground}; there is no pipe in this tile.
\item \code{S} is the \emph{starting position} of the animal; there is a pipe on
this tile, but your sketch doesn\'t show what shape the pipe has.
}

Based on the acoustics of the animal\'s scurrying, you\'re confident the
pipe that contains the animal is \emph{one large, continuous loop}.

For example, here is a square loop of pipe:

\if{html}{\out{<div class="sourceCode">}}\preformatted{.....
.F-7.
.|.|.
.L-J.
.....
}\if{html}{\out{</div>}}

If the animal had entered this loop in the northwest corner, the sketch
would instead look like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{.....
.S-7.
.|.|.
.L-J.
.....
}\if{html}{\out{</div>}}

In the above diagram, the \code{S} tile is still a 90-degree \code{F} bend: you
can tell because of how the adjacent pipes connect to it.

Unfortunately, there are also many pipes that \emph{aren\'t connected to the
loop}! This sketch shows the same loop as above:

\if{html}{\out{<div class="sourceCode">}}\preformatted{-L|F7
7S-7|
L|7||
-L-J|
L|-JF
}\if{html}{\out{</div>}}

In the above diagram, you can still figure out which pipes form the main
loop: they\'re the ones connected to \code{S}, pipes those pipes connect to,
pipes \emph{those} pipes connect to, and so on. Every pipe in the main loop
connects to its two neighbors (including \code{S}, which will have exactly
two pipes connecting to it, and which is assumed to connect back to
those two pipes).

Here is a sketch that contains a slightly more complex main loop:

\if{html}{\out{<div class="sourceCode">}}\preformatted{..F7.
.FJ|.
SJ.L7
|F--J
LJ...
}\if{html}{\out{</div>}}

Here\'s the same example sketch with the extra, non-main-loop pipe tiles
also shown:

\if{html}{\out{<div class="sourceCode">}}\preformatted{7-F7-
.FJ|7
SJLL7
|F--J
LJ.LJ
}\if{html}{\out{</div>}}

If you want to \emph{get out ahead of the animal}, you should find the tile
in the loop that is \emph{farthest} from the starting position. Because the
animal is in the pipe, it doesn\'t make sense to measure this by direct
distance. Instead, you need to find the tile that would take the longest
number of steps \emph{along the loop} to reach from the starting point -
regardless of which way around the loop the animal went.

In the first example with the square loop:

\if{html}{\out{<div class="sourceCode">}}\preformatted{.....
.S-7.
.|.|.
.L-J.
.....
}\if{html}{\out{</div>}}

You can count the distance each tile in the loop is from the starting
point like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{.....
.012.
.1.3.
.234.
.....
}\if{html}{\out{</div>}}

In this example, the farthest point from the start is \emph{\code{4}} steps away.

Here\'s the more complex loop again:

\if{html}{\out{<div class="sourceCode">}}\preformatted{..F7.
.FJ|.
SJ.L7
|F--J
LJ...
}\if{html}{\out{</div>}}

Here are the distances for each tile on that loop:

\if{html}{\out{<div class="sourceCode">}}\preformatted{..45.
.236.
01.78
14567
23...
}\if{html}{\out{</div>}}

Find the single giant loop starting at \code{S}. \emph{How many steps along the
loop does it take to get from the starting position to the point
farthest from the starting position?}

\strong{Part Two}

You quickly reach the farthest point of the loop, but the animal never
emerges. Maybe its nest is \emph{within the area enclosed by the loop}?

To determine whether it\'s even worth taking the time to search for such
a nest, you should calculate how many tiles are contained within the
loop. For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{...........
.S-------7.
.|F-----7|.
.||.....||.
.||.....||.
.|L-7.F-J|.
.|..|.|..|.
.L--J.L--J.
...........
}\if{html}{\out{</div>}}

The above loop encloses merely \emph{four tiles} - the two pairs of \code{.} in
the southwest and southeast (marked \code{I} below). The middle \code{.} tiles
(marked \code{O} below) are \emph{not} in the loop. Here is the same loop again
with those regions marked:

\if{html}{\out{<div class="sourceCode">}}\preformatted{...........
.S-------7.
.|F-----7|.
.||OOOOO||.
.||OOOOO||.
.|L-7OF-J|.
.|II|O|II|.
.L--JOL--J.
.....O.....
}\if{html}{\out{</div>}}

In fact, there doesn\'t even need to be a full tile path to the outside
for tiles to count as outside the loop - squeezing between pipes is also
allowed! Here, \code{I} is still within the loop and \code{O} is still outside the
loop:

\if{html}{\out{<div class="sourceCode">}}\preformatted{..........
.S------7.
.|F----7|.
.||OOOO||.
.||OOOO||.
.|L-7F-J|.
.|II||II|.
.L--JL--J.
..........
}\if{html}{\out{</div>}}

In both of the above examples, \emph{\code{4}} tiles are enclosed by the loop.

Here\'s a larger example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{.F----7F7F7F7F-7....
.|F--7||||||||FJ....
.||.FJ||||||||L7....
FJL7L7LJLJ||LJ.L-7..
L--J.L7...LJS7F-7L7.
....F-J..F7FJ|L7L7L7
....L7.F7||L7|.L7L7|
.....|FJLJ|FJ|F7|.LJ
....FJL-7.||.||||...
....L---J.LJ.LJLJ...
}\if{html}{\out{</div>}}

The above sketch has many random bits of ground, some of which are in
the loop (\code{I}) and some of which are outside it (\code{O}):

\if{html}{\out{<div class="sourceCode">}}\preformatted{OF----7F7F7F7F-7OOOO
O|F--7||||||||FJOOOO
O||OFJ||||||||L7OOOO
FJL7L7LJLJ||LJIL-7OO
L--JOL7IIILJS7F-7L7O
OOOOF-JIIF7FJ|L7L7L7
OOOOL7IF7||L7|IL7L7|
OOOOO|FJLJ|FJ|F7|OLJ
OOOOFJL-7O||O||||OOO
OOOOL---JOLJOLJLJOOO
}\if{html}{\out{</div>}}

In this larger example, \emph{\code{8}} tiles are enclosed by the loop.

Any tile that isn\'t part of the main loop can count as being enclosed
by the loop. Here\'s another example with many bits of junk pipe lying
around that aren\'t connected to the main loop at all:

\if{html}{\out{<div class="sourceCode">}}\preformatted{FF7FSF7F7F7F7F7F---7
L|LJ||||||||||||F--J
FL-7LJLJ||||||LJL-77
F--JF--7||LJLJ7F7FJ-
L---JF-JLJ.||-FJLJJ7
|F|F-JF---7F7-L7L|7|
|FFJF7L7F-JF7|JL---7
7-L-JL7||F7|L7F-7F7|
L.L7LFJ|||||FJL7||LJ
L7JLJL-JLJLJL--JLJ.L
}\if{html}{\out{</div>}}

Here are just the tiles that are \emph{enclosed by the loop} marked with \code{I}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{FF7FSF7F7F7F7F7F---7
L|LJ||||||||||||F--J
FL-7LJLJ||||||LJL-77
F--JF--7||LJLJIF7FJ-
L---JF-JLJIIIIFJLJJ7
|F|F-JF---7IIIL7L|7|
|FFJF7L7F-JF7IIL---7
7-L-JL7||F7|L7F-7F7|
L.L7LFJ|||||FJL7||LJ
L7JLJL-JLJLJL--JLJ.L
}\if{html}{\out{</div>}}

In this last example, \emph{\code{10}} tiles are enclosed by the loop.

Figure out whether you have time to search for the nest by calculating
the area within the loop. \emph{How many tiles are enclosed by the loop?}
}
\examples{
f10a(example_data_10())
f10b()
}
