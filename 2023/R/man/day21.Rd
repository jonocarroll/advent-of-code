% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day21.R
\name{day21}
\alias{day21}
\alias{f21a}
\alias{f21b}
\alias{example_data_21}
\title{Day 21: Step Counter}
\usage{
f21a(x)

f21b(x)

example_data_21(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{f21a(x)} returns .... For Part Two,
\code{f21b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2023/day/21}{Step Counter}

# adj_2 <- function(g, v) {
#   x <- get_pos(g, v)
#   i <- x[1]
#   j <- x[2]
#   
#   # can only move no more than 1 tile
#   res <- abs(floor(0:(prod(dim(g))-1) / nrow(g)) + 1 - i) %% (ncol(g) - 1) <= 1 &
#     abs((0:(prod(dim(g))-1)%%nrow(g)) + 1 - j) %% (nrow(g) - 1) <= 1 & 
#     (abs(floor(0:(prod(dim(g))-1) / nrow(g)) + 1 - i) %% (ncol(g)) == 0 |
#     abs((0:(prod(dim(g))-1)%%nrow(g)) + 1 - j) %% (nrow(g)) == 0) 
#     # can't move diagonally
#     # ((abs(floor(0:(prod(dim(g))-1) / nrow(g)) + 1 - i) %% (ncol(g) - 1)) + (abs((0:(prod(dim(g))-1)%%nrow(g)) + 1 - j) %% (nrow(g) - 1))) == 1
#   # can't sit still
#   res[v] <- 0
#   
#   as.integer(res & g %in% c("S", "."))
# }
}
\details{
\strong{Part One}

You manage to catch the \href{7}{airship} right as it\'s dropping someone
else off on their all-expenses-paid trip to Desert Island! It even
helpfully drops you off near the \href{5}{gardener} and his massive farm.

\"You got the sand flowing again! Great work! Now we just need to wait
until we have enough sand to filter the water for Snow Island and we\'ll
have snow again in no time.\"

While you wait, one of the Elves that works with the gardener heard how
good you are at solving problems and would like your help. He needs to
get his
\href{https://en.wikipedia.org/wiki/Pedometer}{steps}{target="_blank"} in for
the day, and so he\'d like to know \emph{which garden plots he can reach with
exactly his remaining \code{64} steps}.

He gives you an up-to-date map (your puzzle input) of his starting
position (\code{S}), garden plots (\code{.}), and rocks (\verb{#}). For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{...........
.....###.#.
.###.##..#.
..#.#...#..
....#.#....
.##..S####.
.##..#...#.
.......##..
.##.#.####.
.##..##.##.
...........
}\if{html}{\out{</div>}}

The Elf starts at the starting position (\code{S}) which also counts as a
garden plot. Then, he can take one step north, south, east, or west, but
only onto tiles that are garden plots. This would allow him to reach any
of the tiles marked \code{O}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{...........
.....###.#.
.###.##..#.
..#.#...#..
....#O#....
.##.OS####.
.##..#...#.
.......##..
.##.#.####.
.##..##.##.
...........
}\if{html}{\out{</div>}}

Then, he takes a second step. Since at this point he could be at
\emph{either} tile marked \code{O}, his second step would allow him to reach any
garden plot that is one step north, south, east, or west of \emph{any} tile
that he could have reached after the first step:

\if{html}{\out{<div class="sourceCode">}}\preformatted{...........
.....###.#.
.###.##..#.
..#.#O..#..
....#.#....
.##O.O####.
.##.O#...#.
.......##..
.##.#.####.
.##..##.##.
...........
}\if{html}{\out{</div>}}

After two steps, he could be at any of the tiles marked \code{O} above,
including the starting position (either by going north-then-south or by
going west-then-east).

A single third step leads to even more possibilities:

\if{html}{\out{<div class="sourceCode">}}\preformatted{...........
.....###.#.
.###.##..#.
..#.#.O.#..
...O#O#....
.##.OS####.
.##O.#...#.
....O..##..
.##.#.####.
.##..##.##.
...........
}\if{html}{\out{</div>}}

He will continue like this until his steps for the day have been
exhausted. After a total of \code{6} steps, he could reach any of the garden
plots marked \code{O}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{...........
.....###.#.
.###.##.O#.
.O#O#O.O#..
O.O.#.#.O..
.##O.O####.
.##.O#O..#.
.O.O.O.##..
.##.#.####.
.##O.##.##.
...........
}\if{html}{\out{</div>}}

In this example, if the Elf\'s goal was to get exactly \code{6} more steps
today, he could use them to reach any of \emph{\code{16}} garden plots.

However, the Elf \emph{actually needs to get \code{64} steps today}, and the map
he\'s handed you is much larger than the example map.

Starting from the garden plot marked \code{S} on your map, \emph{how many garden
plots could the Elf reach in exactly \code{64} steps?}

\strong{Part Two}

The Elf seems confused by your answer until he realizes his mistake: he
was reading from a [list]{title="Next up: 729."} of his favorite numbers
that are both perfect squares and perfect cubes, not his step counter.

The \emph{actual} number of steps he needs to get today is exactly
\emph{\code{26501365}}.

He also points out that the garden plots and rocks are set up so that
the map \emph{repeats infinitely} in every direction.

So, if you were to look one additional map-width or map-height out from
the edge of the example map above, you would find that it keeps
repeating:

\if{html}{\out{<div class="sourceCode">}}\preformatted{.................................
.....###.#......###.#......###.#.
.###.##..#..###.##..#..###.##..#.
..#.#...#....#.#...#....#.#...#..
....#.#........#.#........#.#....
.##...####..##...####..##...####.
.##..#...#..##..#...#..##..#...#.
.......##.........##.........##..
.##.#.####..##.#.####..##.#.####.
.##..##.##..##..##.##..##..##.##.
.................................
.................................
.....###.#......###.#......###.#.
.###.##..#..###.##..#..###.##..#.
..#.#...#....#.#...#....#.#...#..
....#.#........#.#........#.#....
.##...####..##..S####..##...####.
.##..#...#..##..#...#..##..#...#.
.......##.........##.........##..
.##.#.####..##.#.####..##.#.####.
.##..##.##..##..##.##..##..##.##.
.................................
.................................
.....###.#......###.#......###.#.
.###.##..#..###.##..#..###.##..#.
..#.#...#....#.#...#....#.#...#..
....#.#........#.#........#.#....
.##...####..##...####..##...####.
.##..#...#..##..#...#..##..#...#.
.......##.........##.........##..
.##.#.####..##.#.####..##.#.####.
.##..##.##..##..##.##..##..##.##.
.................................
}\if{html}{\out{</div>}}

This is just a tiny three-map-by-three-map slice of the
inexplicably-infinite farm layout; garden plots and rocks repeat as far
as you can see. The Elf still starts on the one middle tile marked \code{S},
though - every other repeated \code{S} is replaced with a normal garden plot
(\code{.}).

Here are the number of reachable garden plots in this new infinite
version of the example map for different numbers of steps:
\itemize{
\item In exactly \code{6} steps, he can still reach \emph{\code{16}} garden plots.
\item In exactly \code{10} steps, he can reach any of \emph{\code{50}} garden plots.
\item In exactly \code{50} steps, he can reach \emph{\code{1594}} garden plots.
\item In exactly \code{100} steps, he can reach \emph{\code{6536}} garden plots.
\item In exactly \code{500} steps, he can reach \emph{\code{167004}} garden plots.
\item In exactly \code{1000} steps, he can reach \emph{\code{668697}} garden plots.
\item In exactly \code{5000} steps, he can reach \emph{\code{16733044}} garden plots.
}

However, the step count the Elf needs is much larger! Starting from the
garden plot marked \code{S} on your infinite map, \emph{how many garden plots
could the Elf reach in exactly \code{26501365} steps?}
}
\section{This contains the distances from the start node to all other nodes}{
distances = rep(Inf, prod(dim(grid)))
paths = rep(list(), prod(dim(grid)))
}

\section{This contains whether a node was already visited}{
visited = rep(FALSE, prod(dim(grid)))
}

\section{The distance from the start node to itself is of course 0}{
distances\link{start} = 0
paths[\link{start}] = start
}

\section{While there are nodes left to visit...}{

}

\examples{
f21a(example_data_21())
f21b()
}
