% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day08.R
\name{day08}
\alias{day08}
\alias{f08a}
\alias{f08b}
\alias{example_data_08}
\title{Day 08: Haunted Wasteland}
\usage{
f08a(x)

f08b(x)

example_data_08(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{f08a(x)} returns .... For Part Two,
\code{f08b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2023/day/8}{Haunted Wasteland}
}
\details{
\strong{Part One}

You\'re still riding a camel across Desert Island when you spot a
sandstorm quickly approaching. When you turn to warn the Elf, she
disappears before your eyes! To be fair, she had just finished warning
you about \emph{ghosts} a few minutes ago.

One of the camel\'s pouches is labeled \"maps\" - sure enough, it\'s
full of documents (your puzzle input) about how to navigate the desert.
At least, you\'re pretty sure that\'s what they are; one of the
documents contains a list of left/right instructions, and the rest of
the documents seem to describe some kind of \emph{network} of labeled nodes.

It seems like you\'re meant to use the \emph{left/right} instructions to
\emph{navigate the network}. Perhaps if you have the camel follow the same
instructions, you can escape the haunted wasteland!

After examining the maps for a bit, two nodes stick out: \code{AAA} and
\code{ZZZ}. You feel like \code{AAA} is where you are now, and you have to follow
the left/right instructions until you reach \code{ZZZ}.

This format defines each \emph{node} of the network individually. For
example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{RL

AAA = (BBB, CCC)
BBB = (DDD, EEE)
CCC = (ZZZ, GGG)
DDD = (DDD, DDD)
EEE = (EEE, EEE)
GGG = (GGG, GGG)
ZZZ = (ZZZ, ZZZ)
}\if{html}{\out{</div>}}

Starting with \code{AAA}, you need to \emph{look up the next element} based on the
next left/right instruction in your input. In this example, start with
\code{AAA} and go \emph{right} (\code{R}) by choosing the right element of \code{AAA},
\emph{\code{CCC}}. Then, \code{L} means to choose the \emph{left} element of \code{CCC}, \emph{\code{ZZZ}}.
By following the left/right instructions, you reach \code{ZZZ} in \emph{\code{2}}
steps.

Of course, you might not find \code{ZZZ} right away. If you run out of
left/right instructions, repeat the whole sequence of instructions as
necessary: \code{RL} really means \code{RLRLRLRLRLRLRLRL...} and so on. For
example, here is a situation that takes \emph{\code{6}} steps to reach \code{ZZZ}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{LLR

AAA = (BBB, BBB)
BBB = (AAA, ZZZ)
ZZZ = (ZZZ, ZZZ)
}\if{html}{\out{</div>}}

Starting at \code{AAA}, follow the left/right instructions. \emph{How many steps
are required to reach \code{ZZZ}?}

\strong{Part Two}

The [sandstorm]{title="Duhduhduhduhduh! Dah, duhduhduhduhduh!"} is upon
you and you aren\'t any closer to escaping the wasteland. You had the
camel follow the instructions, but you\'ve barely left your starting
position. It\'s going to take \emph{significantly more steps} to escape!

What if the map isn\'t for people - what if the map is for \emph{ghosts}? Are
ghosts even bound by the laws of spacetime? Only one way to find out.

After examining the maps a bit longer, your attention is drawn to a
curious fact: the number of nodes with names ending in \code{A} is equal to
the number ending in \code{Z}! If you were a ghost, you\'d probably just
\emph{start at every node that ends with \code{A}} and follow all of the paths at
the same time until they all simultaneously end up at nodes that end
with \code{Z}.

For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{LR

11A = (11B, XXX)
11B = (XXX, 11Z)
11Z = (11B, XXX)
22A = (22B, XXX)
22B = (22C, 22C)
22C = (22Z, 22Z)
22Z = (22B, 22B)
XXX = (XXX, XXX)
}\if{html}{\out{</div>}}

Here, there are two starting nodes, \verb{11A} and \verb{22A} (because they both
end with \code{A}). As you follow each left/right instruction, use that
instruction to \emph{simultaneously} navigate away from both nodes you\'re
currently on. Repeat this process until \emph{all} of the nodes you\'re
currently on end with \code{Z}. (If only some of the nodes you\'re on end
with \code{Z}, they act like any other node and you continue as normal.) In
this example, you would proceed as follows:
\itemize{
\item Step 0: You are at \verb{11A} and \verb{22A}.
\item Step 1: You choose all of the \emph{left} paths, leading you to \verb{11B} and
\verb{22B}.
\item Step 2: You choose all of the \emph{right} paths, leading you to \emph{\verb{11Z}}
and \verb{22C}.
\item Step 3: You choose all of the \emph{left} paths, leading you to \verb{11B} and
\emph{\verb{22Z}}.
\item Step 4: You choose all of the \emph{right} paths, leading you to \emph{\verb{11Z}}
and \verb{22B}.
\item Step 5: You choose all of the \emph{left} paths, leading you to \verb{11B} and
\verb{22C}.
\item Step 6: You choose all of the \emph{right} paths, leading you to \emph{\verb{11Z}}
and \emph{\verb{22Z}}.
}

So, in this example, you end up entirely on nodes that end in \code{Z} after
\emph{\code{6}} steps.

Simultaneously start on every node that ends with \code{A}. \emph{How many steps
does it take before you\'re only on nodes that end with \code{Z}?}
}
\examples{
f08a(example_data_08())
f08b()
}
