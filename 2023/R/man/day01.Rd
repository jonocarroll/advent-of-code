% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day01.R
\name{day01}
\alias{day01}
\alias{f01a}
\alias{f01b}
\alias{example_data_01}
\title{Day 01: Trebuchet?!}
\usage{
f01a(x)

f01b(x)

example_data_01(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{f01a(x)} returns .... For Part Two,
\code{f01b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2023/day/1}{Trebuchet?!}
}
\details{
\strong{Part One}

Something is wrong with global snow production, and you\'ve been
selected to take a look. The Elves have even given you a map; on it,
they\'ve used stars to mark the top fifty locations that are likely to
be having problems.

You\'ve been doing this long enough to know that to restore snow
operations, you need to check all \emph{fifty stars} by December 25th.

Collect stars by solving puzzles. Two puzzles will be made available on
each day in the Advent calendar; the second puzzle is unlocked when you
complete the first. Each puzzle grants \emph{one star}. Good luck!

You try to ask why they can\'t just use a \href{/2015/day/1}{weather machine}
(\"not powerful enough\") and where they\'re even sending you (\"the
sky\") and why your map looks mostly blank (\"you sure ask a lot of
questions\")
[and]{title="My hope is that this abomination of a run-on sentence somehow conveys the chaos of being hastily loaded into a trebuchet."}
hang on did you just say the sky (\"of course, where do you think snow
comes from\") when you realize that the Elves are already loading you
into a
\href{https://en.wikipedia.org/wiki/Trebuchet}{trebuchet}{target="_blank"}
(\"please hold still, we need to strap you in\").

As they\'re making the final adjustments, they discover that their
calibration document (your puzzle input) has been \emph{amended} by a very
young Elf who was apparently just excited to show off her art skills.
Consequently, the Elves are having trouble reading the values on the
document.

The newly-improved calibration document consists of lines of text; each
line originally contained a specific \emph{calibration value} that the Elves
now need to recover. On each line, the calibration value can be found by
combining the \emph{first digit} and the \emph{last digit} (in that order) to form
a single \emph{two-digit number}.

For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{1abc2
pqr3stu8vwx
a1b2c3d4e5f
treb7uchet
}\if{html}{\out{</div>}}

In this example, the calibration values of these four lines are \code{12},
\code{38}, \code{15}, and \code{77}. Adding these together produces \emph{\code{142}}.

Consider your entire calibration document. \emph{What is the sum of all of
the calibration values?}

\strong{Part Two}

Your calculation isn\'t quite right. It looks like some of the digits
are actually \emph{spelled out with letters}: \code{one}, \code{two}, \code{three}, \code{four},
\code{five}, \code{six}, \code{seven}, \code{eight}, and \code{nine} \emph{also} count as valid
\"digits\".

Equipped with this new information, you now need to find the real first
and last digit on each line. For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{two1nine
eightwothree
abcone2threexyz
xtwone3four
4nineeightseven2
zoneight234
7pqrstsixteen
}\if{html}{\out{</div>}}

In this example, the calibration values are \code{29}, \code{83}, \code{13}, \code{24},
\code{42}, \code{14}, and \code{76}. Adding these together produces \emph{\code{281}}.

\emph{What is the sum of all of the calibration values?}
}
\examples{
f01a(example_data_01())
f01b()
}
